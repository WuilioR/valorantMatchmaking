{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, createContext, useEffect } from 'react';\nimport * as authService from '../services/auth';\n\n// Crear el contexto\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Check for existing user on mount\n  useEffect(() => {\n    const existingUser = authService.getUser();\n    if (existingUser) {\n      setUser(existingUser);\n    }\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const {\n        user: authUser,\n        error\n      } = await authService.login(email, password);\n      if (error) {\n        throw new Error(error);\n      }\n      if (authUser) {\n        setUser(authUser);\n        localStorage.setItem('user', JSON.stringify(authUser));\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    setLoading(true);\n    try {\n      const {\n        user: authUser,\n        error\n      } = await authService.register(username, email, password);\n      if (error) {\n        throw new Error(error);\n      }\n      if (authUser) {\n        setUser(authUser);\n        localStorage.setItem('user', JSON.stringify(authUser));\n      }\n    } catch (error) {\n      console.error('Register error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value\n  }, children);\n};\n\n// Hook para usar el contexto\n_s(AuthProvider, \"Vot/f62t7wRmBOt67JIN3/+eVxk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useContext","createContext","useEffect","authService","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","existingUser","getUser","login","email","password","authUser","error","Error","localStorage","setItem","JSON","stringify","console","register","username","logout","value","createElement","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/wuili/Documents/valorant-mobile-web/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import React, { useState, useContext, createContext, useEffect } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport * as authService from '../services/auth';\r\n\r\n// Crear el contexto\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider del contexto\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Check for existing user on mount\r\n  useEffect(() => {\r\n    const existingUser = authService.getUser();\r\n    if (existingUser) {\r\n      setUser(existingUser);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const { user: authUser, error } = await authService.login(email, password);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      if (authUser) {\r\n        setUser(authUser);\r\n        localStorage.setItem('user', JSON.stringify(authUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const { user: authUser, error } = await authService.register(username, email, password);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      if (authUser) {\r\n        setUser(authUser);\r\n        localStorage.setItem('user', JSON.stringify(authUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Register error:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return React.createElement(AuthContext.Provider, { value }, children);\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}