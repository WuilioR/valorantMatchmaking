{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from 'react';\n// Crear el contexto\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // TODO: Implementar login real con backend\n      const mockUser = {\n        id: 'temp-user-id',\n        username: 'TempUser',\n        email: email,\n        elo: 1400\n      };\n      setUser(mockUser);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    setLoading(true);\n    try {\n      // TODO: Implementar registro real con backend\n      const mockUser = {\n        id: 'temp-user-id',\n        username: username,\n        email: email,\n        elo: 1000\n      };\n      setUser(mockUser);\n    } catch (error) {\n      console.error('Register error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value\n  }, children);\n};\n\n// Hook para usar el contexto\n_s(AuthProvider, \"wTzXmCFe6HlddNT0jYEkR+YkPsQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useContext","createContext","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","login","email","password","mockUser","id","username","elo","error","console","register","logout","value","createElement","Provider","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/wuili/Documents/valorant-mobile-web/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import React, { useState, useContext, createContext } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\n\r\n// Crear el contexto\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider del contexto\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      // TODO: Implementar login real con backend\r\n      const mockUser: User = {\r\n        id: 'temp-user-id',\r\n        username: 'TempUser',\r\n        email: email,\r\n        elo: 1400\r\n      };\r\n      setUser(mockUser);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      // TODO: Implementar registro real con backend\r\n      const mockUser: User = {\r\n        id: 'temp-user-id',\r\n        username: username,\r\n        email: email,\r\n        elo: 1000\r\n      };\r\n      setUser(mockUser);\r\n    } catch (error) {\r\n      console.error('Register error:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return React.createElement(AuthContext.Provider, { value }, children);\r\n};\r\n\r\n// Hook para usar el contexto\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAGlE;AACA,MAAMC,WAAW,gBAAGD,aAAa,CAA8BE,SAAS,CAAC;;AAEzE;AACA,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvDH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMI,QAAc,GAAG;QACrBC,EAAE,EAAE,cAAc;QAClBC,QAAQ,EAAE,UAAU;QACpBJ,KAAK,EAAEA,KAAK;QACZK,GAAG,EAAE;MACP,CAAC;MACDT,OAAO,CAACM,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAAA,CAAOJ,QAAgB,EAAEJ,KAAa,EAAEC,QAAgB,KAAK;IAC5EH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMI,QAAc,GAAG;QACrBC,EAAE,EAAE,cAAc;QAClBC,QAAQ,EAAEA,QAAQ;QAClBJ,KAAK,EAAEA,KAAK;QACZK,GAAG,EAAE;MACP,CAAC;MACDT,OAAO,CAACM,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAMA,KAAK;IACb,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMc,KAAsB,GAAG;IAC7Bf,IAAI;IACJI,KAAK;IACLS,QAAQ;IACRC,MAAM;IACNZ;EACF,CAAC;EAED,oBAAOX,KAAK,CAACyB,aAAa,CAACrB,WAAW,CAACsB,QAAQ,EAAE;IAAEF;EAAM,CAAC,EAAEjB,QAAQ,CAAC;AACvE,CAAC;;AAED;AAAAC,EAAA,CAzDaF,YAAqD;AAAAqB,EAAA,GAArDrB,YAAqD;AA0DlE,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAG5B,UAAU,CAACE,WAAW,CAAC;EACvC,IAAI0B,OAAO,KAAKzB,SAAS,EAAE;IACzB,MAAM,IAAI0B,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}